#!/usr/bin/python

import argparse
import tempfile
import subprocess
import os

parser = argparse.ArgumentParser(description='Convert old to new mesh format')
parser.add_argument('-c','--curved',  action='store_true', help='Use curved: MUST BE GIVEN! if not known,  set false and run, there is a sanity check')
parser.add_argument('-bo','--boundaryorder',  type=int, help='Boundary order: MUST BE GIVEN FOR useCurveds=T! if not known, run and set to value given by abort message')
parser.add_argument('-s','--sortijk', action='store_true', help='Structured mesh: use IJK sorting')

parser.add_argument('input',help='input mesh file')
parser.add_argument('output',help='project name of output mesh file')

args = parser.parse_args()

prm = tempfile.NamedTemporaryFile(delete=False)

prm.write('ProjectName=%s\n' % args.output)
prm.write('Mode=-1\n')
prm.write('FileName=%s\n' % args.input)
if args.curved :
    prm.write('UseCurveds=T\n')
    prm.write('BoundaryOrder=%d\n' % args.boundaryorder)
else :
    prm.write('UseCurveds=F\n')
if args.sortijk :
    prm.write('doSortIJK=T\n')
prm.write('nVisu=1\n')
prm.write('nAnalyze=1\n')
prm.write('nZones=1\n')
prm.close()

hopr = os.path.join(os.path.dirname(os.path.realpath(__file__)), 'hopr')
cmd = [hopr, prm.name]
subprocess.call(cmd)

os.remove(prm.name)
